.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WOL 1"
.TH WOL 1 "2004-04-29" "wol 0.7.1" "wol"
.SH "NAME"
wol \- Wake On LAN client
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
wol [\fI\s-1OPTION\s0\fR] ... \fIMAC-ADDRESS\fR ...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This manual gives you an introduction into \f(CW\*(C`wol\*(C'\fR, the Wake On \s-1LAN\s0 client.
It remotely turns on computers that supports Magic Packet technology
(also known as Wake On \s-1LAN\s0).
.PP
Some workstations support SecureON password feature. These machines only
wake up if you provide the correct password. \f(CW\*(C`wol\*(C'\fR also provides this
feature.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Print a summary of the command line options.
.IP "\fB\-V\fR" 4
.IX Item "-V"
.PD 0
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
.PD
Print the version number of \f(CW\*(C`wol\*(C'\fR.
.IP "\fB\-h \s-1HOST\s0\fR" 4
.IX Item "-h HOST"
.PD 0
.IP "\fB\-\-host=HOST\fR" 4
.IX Item "--host=HOST"
.IP "\fB\-i \s-1HOST\s0\fR" 4
.IX Item "-i HOST"
.IP "\fB\-\-ipaddr=HOST\fR" 4
.IX Item "--ipaddr=HOST"
.PD
Broadcast packet to this \s-1IP\s0 address or hostname. This is important if your wol
client is a multihomed host and you want to send only to one subnet
(default \s-1IP\s0 address is \f(CW255.255.255.255\fR).
.IP "\fB\-p \s-1NUM\s0\fR" 4
.IX Item "-p NUM"
.PD 0
.IP "\fB\-\-port=NUM\fR" 4
.IX Item "--port=NUM"
.PD
Send packet with this destination port \fI\s-1NUM\s0\fR. This option is important if
your packet filter would block the default destination port \f(CW40000\fR.
.IP "\fB\-f \s-1FILE\s0\fR" 4
.IX Item "-f FILE"
.PD 0
.IP "\fB\-\-file=FILE\fR" 4
.IX Item "--file=FILE"
.PD
Read hardware addresses, \s-1IP\s0 addresses/hostnames, optional ports and SecureON
password from file \fI\s-1FILE\s0\fR. If \fI\s-1FILE\s0\fR is \fI\-\fR \f(CW\*(C`wol\*(C'\fR reads from
stdin.
.IP "\fB\-\fR" 4
.IX Item "-"
Read hardware addresses, \s-1IP\s0 addresses, optional ports and optional SecureON
password from stdin. So you can extract \fIMAC-ADDRESSES\fR from any source
and pipe the data into \f(CW\*(C`wol\*(C'\fR so.
.IP "\fB\-v\fR" 4
.IX Item "-v"
.PD 0
.IP "\fB\-\-verbose\fR" 4
.IX Item "--verbose"
.PD
Turns on verbose output.
.IP "\fB\-w \s-1NUM\s0\fR" 4
.IX Item "-w NUM"
.PD 0
.IP "\fB\-\-wait=NUM\fR" 4
.IX Item "--wait=NUM"
.PD
Waits \fI\s-1NUM\s0\fR milliseconds between Magic Packets. Also known as fuse health
pack.
.IP "\fB\-\-passwd[=PASS]\fR" 4
.IX Item "--passwd[=PASS]"
Send a magic packet with SecureON password feature. \fI\s-1PASS\s0\fR is written as
x\-x\-x\-x\-x\-x, where x is a hexadecimal number between 0 and ff which represents
one byte of the password.
.Sp
If you don't provide \fI\s-1PASS\s0\fR \f(CW\*(C`wol\*(C'\fR prompts you for a password.
.Sp
To set the password of your SecureON capable \s-1NIC\s0, you can use
\&\f(CW\*(C`ethtool\*(C'\fR (<\fBhttp://www.sourceforge.net/projects/gkernel/\fR>).
.SH "BUGS"
.IX Header "BUGS"
Please report bugs to <\fBkrennwallner@aon.at\fR>. Feel free to send bug
reports, translations, improvement suggestions and patches to this email
address.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1GNU\s0 info entry for \fIwol\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Thomas Krennwallner <krennwallner@aon.at>.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2001,2002,2003,2004 Thomas Krennwallner <\fBkrennwallner@aon.at\fR>
.PP
This document may be distributed and modified under the terms of the \s-1GNU\s0
General Public License.
.PP
This manual is free software; you may redistribute it and/or modify it under
the terms of the \s-1GNU\s0 General Public License as published by the Free Software
Foundation; either version 2, or (at your option) any later version.
.PP
This manual is distributed in the hope that it will be useful, but without any
warranty; without even the implied warranty of merchantability or fitness for a
particular purpose. See the \s-1GNU\s0 General Public License for more details.
.PP
A copy of the \s-1GNU\s0 General Public License is available on the World Wide Web at
the \s-1GNU\s0 website. You can also obtain it by writing to the Free Software
Foundation, Inc., 59 Temple Place \- Suite 330, Boston, \s-1MA\s0 02111\-1307, \s-1USA\s0.
